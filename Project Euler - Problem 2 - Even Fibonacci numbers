# Project Euler - Problem 2 - Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.


def foo(list_fib):
    print(sum([i+i for i in list_fib if i <4000000 and i%2==0])/2)


def main():
    list_fib = [1, 2]
    y = 0
    while True:
        y += 1
        if list_fib[-1] > 4000000:
            break
        else:
            list_fib.append(list_fib[y]+list_fib[y-1])
    foo(list_fib)


if __name__ == '__main__':
    main()
