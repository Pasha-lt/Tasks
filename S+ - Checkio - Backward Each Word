# S+ - Checkio - Backward Each Word
# In a given string you should reverse every word, but the words should stay in their places.
# Input: A string.
# Output: A string.


import re

def backward_string_by_word(text: str) -> str:
    """
    Разделяем строку на части по более сложным условиям - re.split().
    \w       Matches any alphanumeric character; equivalent to [a-zA-Z0-9_]
    \s       Matches any whitespace character; equivalent to [ \t\n\r\f\v]
    """
    temp_lst = re.split('(\w+|\s)', text)

    reversed_words = ''

    for word in temp_lst:
        reversed_words += word[::-1]

    return reversed_words


if __name__ == '__main__':
    print("Example:")
    print(backward_string_by_word(''))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert backward_string_by_word('') == ''
    assert backward_string_by_word('world') == 'dlrow'
    assert backward_string_by_word('hello world') == 'olleh dlrow'
    assert backward_string_by_word('hello   world') == 'olleh   dlrow'
    assert backward_string_by_word('welcome to a game') == 'emoclew ot a emag'
    print("Coding complete? Click 'Check' to earn cool rewards!")
