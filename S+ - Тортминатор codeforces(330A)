# S+ - Тортминатор codeforces(330A)
# Дан квадратный торт, который имеет вид таблицы размером r × c.
# Каждая ячейка таблицы содержит либо гадкую клубничку, либо является пустой. Например,
# торт размера 3 × 4 может выглядеть так:
#
# Тортминатор намерен съесть этот торт! Каждый раз, когда он ест, он выбирает строку или столбец,
# не содержащие гадкой клубнички, а содержащие по крайней мере одну несъеденную ячейку торта.
# Затем Тортминатор поедает все выбранные им ячейки торта. Тортминатор может есть сколько угодно раз.
#
# Пожалуйста, выведите максимальное количество ячеек, которые может съесть Тортминатор.
#
# Входные данные
# Первая строка содержит два целых числа r и c (2 ≤ r, c ≤ 10),
# обозначающих количество строк и количество столбцов в торте.
# Следующие r строк содержат по c символов — j-ый символ i-ой строки обозначает содержимое ячейки
# в строке i и столбце j, и имеет одно из следующих значений:
# символ '.' обозначает ячейку торта без гадкой клубнички;
# символ 'S' обозначает ячейку торта с гадкой клубничкой.
#
# Выходные данные
# Выведите максимальное количество ячеек торта, которые может съесть тортминатор.
#
# Примеры
# входные данные
# 3 4
# S...
# ....
# ..S.
# выходные данные
# 8
def main():
    """Создаем основной блок, в него будет входить первичная матрица(tort) и матрица с результати(count1).
     В матрице с результатами линии из единиц будут обозначать возможность сеьеть торт.
     изнчачально в матрице с результатом все линии будут нолями.
     r - высота матрицы
     с - ширина матрицы
     tort - исходная матрица, где 'S' это клубника, а '.' это ячейка которую можно скушать.
     """
    r, c = map(int, input().split())
    tort = []
    for i in range(r):
        tort.append(input())
    count1 = [[0]*c for i in range(r)]
    row_colomn(r, c, count1, tort)


def row_colomn(r, c, count1, tort):
    """Функция которая ищет 'S' в строчках и колонках и если не находит 'S' заполняет единицами."""
    for i in range(r):
        if 'S' not in tort[i]:  # Если в строчке нет 'S' тогда наполняем эту строчку единицами.
            for j in range(c):
                count1[i][j] = 1

    for j in range(c):  # Если в колнке нет 'S' тогда наполняем эту колонку единицами.
        a = 0
        for i in range(r):
            if tort[i][j] == 'S':
                a = 1
                break
        if not a:
            for i in range(r):
                count1[i][j] = 1
    count(count1)


def count(count1):
    """В функции сумируем все единицы в матрице с результатами и таким образом получаем нужную нам величену."""
    t = 0
    for i in count1:
        t += sum(i)
    print(t)


if __name__ == '__main__':
    main()
