# S+ - Задача на рекурсивный перебор(informatics.mccme.ru) 
# Дано натуральное число N. Рассмотрим его разбиение на натуральные слагаемые.
# Два разбиения, отличающихся только порядком слагаемых, будем считать за одно,
# поэтому можно считать, что слагаемые в разбиении упорядочены по невозрастанию.
#
# Входные данные
# Задано единственное число N. (N ≤ 40)
#
# Выходные данные
# Необходимо вывести все разбиения числа N на натуральные слагаемые в лексикографическом порядке.
#
# Примеры
# входные данные
# 5
# выходные данные
# 1 1 1 1 1
# 2 1 1 1
# 2 2 1
# 3 1 1
# 3 2
# 4 1
# 5


def recursion(summa, prefix=[]):
    """
    Функция принимает число summa и рекурсивно его раскладывает на слагаемые.
    prefix списки с расложенными на слагаемые, в конечном результате мы его и выводим.
    """
    if summa == 0:  # Базовый случай рекурсии.
        print(*prefix)  # Распаковываем списки.
    else:
        for i in range(1, summa + 1):
            if not prefix:
                recursion(summa - i, prefix + [i])
            elif prefix[-1] >= i:  # Фильтруем с помощью порядка возрастания чтобы избавится от дублей.
                recursion(summa - i, prefix + [i])


def main():
    """
    Функция принимающая на вход число, которое нужно разложить на слагаемые, это число мы передаем в функцию recursion
    """
    summa = int(input('Введите число'))
    recursion(summa)


if __name__ == '__main__':
    main()
