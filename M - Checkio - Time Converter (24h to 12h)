# Вы предпочитаете использовать 12-часовой формат времени,
# но современный мир живет в 24-часовом формате и вы видите это повсюду.
# Ваша задача - переконвертировать время из 24-часового формата в 12-часовой, использкя следующие правила:
# - выходной формат должен быть 'чч:мм a.m.' (для часов до полудня) или 'чч:мм p.m.' (для часов после полудня)
# - если часы меньше 10 - не пишите '0' перед ними. Например: '9:05 a.m.'
# Вы можете узнать больше подробностей о 12-часовом формате.
# Входные данные: Время в 24-часовом формате (как строка).
# Выходные данные: Время в 12-часовом формате (как строка).
# Предусловия:
# '00:00' <= время <= '23:59'

def time_converter(time):

    if int(time[0:2]) > 12:
        t = f'{int(time[0:2]) - 12}:{time[3:]} p.m.'

    elif int(time[0:2]) == 12:
        t = f'{int(time[0:2])}:{time[3:]} p.m.'

    elif int(time[0:2]) == 0:
        t = f'{abs(int(time[0:2])-12)}:{time[3:]} a.m.'
    else:
        t = f'{int(time[0:2])}:{time[3:]} a.m.'
    return t

if __name__ == '__main__':
    print("Example:")
    print(time_converter('12:30'))

    #These "asserts" using only for self-checking and not necessary for auto-testing
    assert time_converter('12:30') == '12:30 p.m.'
    assert time_converter('09:00') == '9:00 a.m.'
    assert time_converter('23:15') == '11:15 p.m.'
    print("Coding complete? Click 'Check' to earn cool rewards!")
