# моя почта 9139136@gmail.com
# Ваня и забор
# Ваня с друзьями идёт по запрещенной территории возле забора высотой h. Чтобы охранник их не заметил,
# высота каждого из друзей не должна превышать h. При этом каждый из них может пригнуться,
# тогда его точно не будет видно охраннику. Высота i-го из друзей равняется ai.
# Будем считать, что ширина человека, идущего в полный рост, равна 1, а согнутого — 2. Друзья хотят идти по дороге в один ряд,
# чтобы иметь возможность разговаривать друг с другом. Какой минимальной ширины должна быть дорога,
# чтобы все они поместились на ней в один ряд и охранник никого не увидел?
# Входные данные
# В первой строке входных данных записаны два целых числа n и h (1 ≤ n ≤ 1000, 1 ≤ h ≤ 1000)
# сота забора соответственно.
# Во второй строке записаны n целых чисел ai (1 ≤ ai ≤ 2h), i-е из которых равняется высоте i-го друга.
# Выходные данные
# Выведите единственное целое число — минимальную подходящую ширину дороги.
# Примеры
# входные данные
# 3 7
# 4 5 14
# выходные данные
# 4
# входные данные
# 6 1
# 1 1 1 1 1 1
# выходные данные
# 6
# входные данные
# 6 5
# 7 6 8 9 10 5
# выходные данные
# 11
# Примечание
# В первом примере пригнуться нужно третьему другу, тогда потребуется ширина дороги 1 + 1 + 2 = 4.
# Во втором примере никому не нужно сгибаться и достаточно ширины 1 + 1 + 1 + 1 + 1 + 1 = 6.
# В третьем примере пригнуться необходимо всем, кроме друга с номером n,
# а минимальная ширина дороги равна 2 + 2 + 2 + 2 + 2 + 1 = 11.
# ------ solution ------


def main():
    n,h = map(int,input('Number of friends and fence height').split())
    height = list(map(int,input('Friends Height').split())) # do through the 'map' and then we don't need 'n'.
    print(foo(h, height))


def foo(h,height):
    total = 0
    for i in height:
        if i > h:
            total += 2
        else:
            total += 1
    return total


if __name__ == '__main__':
     main()
