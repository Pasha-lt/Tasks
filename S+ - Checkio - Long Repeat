# Существует четыре миссии связанные с анализом частей строки.
# Все они были созданы за один день и не требуют более одного дня для своего решения.
# Эти миссии можно с легкостью преодолеть посредством простого перебора символов.
# Но, возможно, есть вариант получше? (У Вас может еще не быть доступа ко всем этим миссиям,
# но по мере открытия островов на карте он будет предоставлен)
# Это первая миссия из серии. Вам необходимо найти длину самой длинной подстроки, которая состоит из одинаковых букв.
# Например, строка "aaabbcaaaa" состоит из четырех подстрок с одинаковыми буквами "aaa", "bb","c" и "aaaa".
# Последняя подстрока является самой длинной, что и делает ее ответом.
# Входные данные: Строка.
# Выходные данные: Целое число.

def long_repeat(line: str) -> int:
    if len(line) == 0:
        return 0
    k = 1
    i = -1
    m = 1

    while i < len(line) - 2:
        i += 1
        if line[i] == line[i + 1]:
            k += 1
            if k > m:
                m = k

        else:
            k = 1
    return m


if __name__ == '__main__':
    # These "asserts" using only for self-checking and not necessary for auto-testing
    assert long_repeat('sdsffffse') == 4, "First"
    assert long_repeat('ddvvrwwwrggg') == 3, "Second"
    assert long_repeat('abababaab') == 2, "Third"
    assert long_repeat('') == 0, "Empty"
    print('"Run" is good. How is "Check"?')
