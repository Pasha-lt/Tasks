# моя почта 9139136@gmail.com
# Переключение гравитации
# Маленький Крис скучает на занятиях по физике (слишком просто), поэтому он смастерил необычную коробку для игрушек,
# чтобы занять себя. Необычность коробки заключается в том, что она может изменять гравитацию!
# В коробке находятся n столбиков игрушечных кубиков, расположенных в ряд: i-й столбик состоит из ai кубиков.
# Изначально гравитация в коробке тянет все кубики вниз. Когда Крис переключает гравитацию,
# она начинает тянуть все кубики к правой стенке коробки. Рисунок показывает начальное и конечное расположение кубиков в коробке:
# кубики, изменившие свои позиции, выделены оранжевым цветом.
# Вам дано изначальное расположение игрушечных кубиков в коробке. Найдите количество кубиков в каждом из n
# столбиков после переключения гравитации!
# Входные данные
# В первой строке входных данных записано целое число n (1 ≤ n ≤ 100), количество столбиков в коробке.
# В следующей строке записано n целых чисел через пробел: i-е число ai (1 ≤ ai ≤ 100) обозначает количество кубиков в i-м столбике.
# Выходные данные
# Выведите n целых чисел через пробел: i-е число должно обозначать количество кубиков в i-м столбике после переключения гравитации.
# Примеры
# входные данные
# 4
# 3 2 1 2
# выходные данные
# 1 2 2 3
# входные данные
# 3
# 2 3 8
# выходные данные
# 2 3 8
# Примечание
# Первый тестовый пример изображен на рисунке. Верхний кубик первого столбика падает на верх последнего столбика;
# верхний кубик второго столбика падает на верх третьего столбика; средний кубик первого столбика падает на верх второго столбика.
# Во втором тестовом примере переключение гравитации не меняет высоты столбиков.
# ------ solution ------


def main():
    t = list(map(int, input('_').split()))
    foo(t)


def foo(t):
    t.sort(reverse=False)
    for key in t:
        print(key, end=' ')


if __name__ == '__main__':
     main()
