# моя почта 9139136@gmail.com
# Новый год и спешка
# В последний день уходящего 2016 года Лимак собирается принять участие в соревновании по спортивному программированию.
# Соревнование начнётся в 20:00 и будет продолжаться четыре часа, то есть ровно до полуночи. Участникам будет предложено n задач,
# упорядоченных по возрастанию сложности, то есть задача 1 будет самой лёгкой, а задача номер n — самой сложной. Лимак знает,
# что ему потребуется 5·i минут на решение i-й задачи.
# Друзья Лимака планирую устроить роскошную новогоднюю вечеринку и Лимак хочет прибыть в полночь или ранее. Он знает,
# что ему требуется ровно k минут чтобы добрать до места проведения вечеринки от своего дома,
# где он собирается участвовать в соревновании.
# Сколько максимум задач может успеть решить Лимак, так чтобы не опоздать на новогоднюю вечеринку?
# Входные данные
# В первой строке входных данных записаны два целых числа n и k (1 ≤ n ≤ 10, 1 ≤ k ≤ 240) —
# количество задач в соревновании и количество минут, за которое Лимак доберётся от дома до места проведения вечеринки.
# Выходные данные
# Выведите одно целое число, равное максимальному количеству задач, которое может решить Лимак,
# так чтобы прибыть на новогоднюю вечеринку ровно в полночь или раньше.
# Примеры
# входные данные
# 3 222
# выходные данные
# 2
# входные данные
# 4 190
# выходные данные
# 4
# входные данные
# 7 1
# выходные данные
# 7
# Примечание
# В первом примере на соревновании участникам предложено 3 задачи и Лимаку требуется 222 минуты,
# чтобы доехать до места проведения вечеринки. Для решения задач требуется 5, 10 и 15 минут соответственно.
# Лимак может решить первые две задачи, потравив на это 5 + 10 = 15 минут, после чего выехать в 20:15
# и приехать на вечеринку в 23:57 (через 222 минуты). Таким образом он решит две задачи,
# но на решение третьей времени уже не хватит и ответ равен 2.
# Во втором примере Лимак может решить все 4 задачи за 5 + 10 + 15 + 20 = 50 минут. В 20:50
# он сможет выехать из дома и прибыть на вечеринку ровно в полночь.
# В третьем примере Лимаку нужна только 1 минута, чтобы оказаться на вечеринке, так что ему хватит времени для решения всех 7 задач.
# ------ solution ------


def main():
    n = int(input('Number of tasks offered to programmers'))
    k = int(input('The number of minutes Limak needs to get to the party.'))
    foo(n, k)


def foo(n,k):
    z = n1 = 0  # resolved tasks and time to complete the task
    f = 240 - k  # All time 4х60 = 240 mines travel time
    while n > 0: 
        n -= 1
        n1 += 5  # next task plus 5 minutes
        f = f - n1
        if f < 0:
            break
        z += 1
    print(z)


if __name__ == '__main__':
     main()
